version: "3"
services:
  web_service:
    build: filesharing-web-service
    ports:
      - "8080:8080"
    environment:
      FS_HOST: ":8080"
      FS_SESSION_EXPIRE_PERIOD_SEC: "2592000"
      FS_GATEWAY_HOST: "filesharing:8000"
    depends_on:
      - filesharing
  filesharing:
    build:
      context: ./
      dockerfile: Dockerfile
    labels:
      co.elastic.logs/enabled: true
      co.elastic.logs/json.keys_under_root: true
      co.elastic.logs/json.overwrite_keys: true
      co.elastic.logs/json.add_error_key: true
      co.elastic.logs/json.expand_keys: true
    ports:
      - "8000:8000"
    environment:
      FS_CONFIG_FILE: "/usr/share/config/filesharing.yml"
      MICRO_BROKER: "nats"
      MICRO_BROKER_ADDRESS: "natsd:4222"
    depends_on:
      - file_service
      - auth
    volumes:
      - ./config/service/filesharing.yml:/usr/share/config/filesharing.yml
  file_service:
    build: filesharing-file-service
    environment:
      FS_SERVICE_NAME: "filesharing.fileservice"
      FS_ROOT_DIR: "/data/storage/"
      FS_TEMP_DIR: "/data/temp/"
      FS_PERMANENT_DIRECTORY: "permanent"
      FS_CLEAN_TIME: "23:59"
    volumes:
      - filesharing-file-service-storage:/data/
  auth:
    build: filesharing-auth-service
    labels:
      co.elastic.logs/enabled: true
      co.elastic.logs/json.keys_under_root: true
      co.elastic.logs/json.overwrite_keys: true
      co.elastic.logs/json.add_error_key: true
      co.elastic.logs/json.expand_keys: true
    environment:
      FS_SERVICE_NAME: "filesharing.authservice"
      FS_CONFIG_FILE: "/usr/share/config/auth.yml"
    depends_on:
      - dbpg
    volumes:
      - ./config/service/auth.yml:/usr/share/config/auth.yml
  telegram_bot_service:
    build: filesharing-tg-service
    environment:
      FS_SERVICE_NAME: "filesharing.tgservice"
      FS_TG_BOT_TOKEN: ""
      FS_STORAGE_NAME: "common"
      FS_DB_CONNECTION_STRING: "user=postgres password=123456 dbname=tg host=dbpg port=5432 sslmode=disable"
      MICRO_BROKER: "nats"
      MICRO_BROKER_ADDRESS: "natsd:4222"
  dbpg:
    image: postgres
    ports:
      - 5432:5432
    environment:
      POSTGRES_MULTIPLE_DATABASES: auth,tg
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 123456
    volumes:
      - ./docker-postgresql-multiple-databases:/docker-entrypoint-initdb.d
      - filesharing-db-data:/var/lib/postgresql/data/
  natsd:
    image: nats:latest
    ports:
     - 4222:4222
  # pgadmin:
  #   image: dpage/pgadmin4
  #   depends_on:
  #     - dbpg
  #   ports:
  #     - "7000:80"
  #   environment:
  #     PGADMIN_DEFAULT_EMAIL: pgadmin4@pgadmin.org
  #     PGADMIN_DEFAULT_PASSWORD: 123456
  filebeat:
    labels:
      co.elastic.logs/enabled: false
    user: root
    image: docker.elastic.co/beats/filebeat:7.14.0
    command: filebeat -e -strict.perms=false
    volumes:
      - ./config/filebeat.docker.yml:/usr/share/filebeat/filebeat.yml
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
  elasticsearch:
    labels:
      co.elastic.logs/enabled: false
    environment:
      - discovery.type=single-node
    image: docker.elastic.co/elasticsearch/elasticsearch:7.14.0
    healthcheck:
      test: ["CMD", "curl", "-s", "-f", "http://localhost:9200/_cat/health"]
      interval: 3s
      timeout: 3s
      retries: 80
    ports:
      - 9200:9200
  kibana:
    labels:
      co.elastic.logs/enabled: false
    image: docker.elastic.co/kibana/kibana:7.14.0
    depends_on:
      elasticsearch:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-s", "-f", "http://localhost:5601/api/status"]
      interval: 3s
      timeout: 3s
      retries: 80
    ports:
      - 5601:5601
  prometheus:
    image: prom/prometheus:v2.24.0
    volumes:
      - ./config/prometheus/:/etc/prometheus/
      - filesharing-prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    ports:
      - 9090:9090
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    volumes:
      - filesharing-grafana-storage:/var/lib/grafana
volumes:
  filesharing-file-service-storage:
  filesharing-db-data:
  filesharing-grafana-storage:
  filesharing-prometheus-data:
